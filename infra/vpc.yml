AWSTemplateFormatVersion: 2010-09-09
Description: Initial VPC build
# Metadata: 

# Parameters: 

# Mappings: 

# Conditions: 

Resources: 
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: false
      Tags:
        - Key: Name
          Value: 'cb-ohio'
  publicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2a
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: 10.0.0.0/24
      Tags:
        - Key: Name
          Value: cb-ohio-public-1
  privateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2a
      VpcId: !Ref VPC         
      CidrBlock: 10.0.1.0/24
      Tags:
        - Key: Name
          Value: cb-ohio-private-1
  publicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2b
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: 10.0.2.0/24
      Tags:
        - Key: Name
          Value: cb-ohio-public-2
  privateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2b
      VpcId: !Ref VPC         
      CidrBlock: 10.0.3.0/24
      Tags:
        - Key: Name
          Value: cb-ohio-private-2
  publicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2c
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: 10.0.4.0/24
      Tags:
        - Key: Name
          Value: cb-ohio-public-3
  privateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2c
      VpcId: !Ref VPC
      CidrBlock: 10.0.5.0/24
      Tags:
        - Key: Name
          Value: cb-ohio-private-3
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Application
          Value: !Ref AWS::StackId
        - Key: Name
          Value: CB IGW
        - Key: Network
          Value: Public
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref AWS::StackId
        - Key: Name
          Value: CB Public RT
        - Key: Network
          Value: Public
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref AWS::StackId
        - Key: Name
          Value: CB Private RT
        - Key: Network
          Value: Private
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  # GatewayRouteTableAssociation:
  #   Type: AWS::EC2::GatewayRouteTableAssociation
  #   Properties:
  #     GatewayId: !Ref InternetGateway
  #     RouteTableId: !Ref PublicRouteTable
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PrivateRTAssoc1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privateSubnet1
      RouteTableId: !Ref PrivateRouteTable
  PrivateRTAssoc2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privateSubnet2
      RouteTableId: !Ref PrivateRouteTable
  PrivateRTAssoc3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privateSubnet3
      RouteTableId: !Ref PrivateRouteTable    
  PublicRTAssoc1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicRTAssoc2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet2
      RouteTableId: !Ref PublicRouteTable
  PublicRTAssoc3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet3
      RouteTableId: !Ref PublicRouteTable

# Outputs: