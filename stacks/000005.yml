AWSTemplateFormatVersion: 2010-09-09
Description: Template for EC2 instances

# Metadata: 

Parameters:
  # VAR_PARAM_OS
  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-2a
  SubnetType:
    Type: String
    AllowedValues:
      - Private
      - Public
    Default: Private
  IamInstanceProfile:
    Type: String
    Default: EC2-S3-Access

# Mappings will need to be created by CB #
Mappings:
  AMIMap:
    us-east-2:
      ubuntu16: ami-0564dd36709a7a5b2
      ubuntu18: ami-0e8d1a9b450baa691
      suse: ami-0eb964f1cd28eb94d
  SubnetMap:
    us-east-1a:
      Public: subnet-1ab2e551
    us-east-1b:
      Public: subnet-3aab2667
    us-east-1d:
      Private: subnet-c80e87e7
    us-east-1c:
      Private: subnet-06501962
    us-east-2a:
      Public: subnet-0ca766e0aba0bb36e
      Private: subnet-09fad3f8b283a63ef
    us-east-2c:
      Public: subnet-08b783efe3bfed00e
      Private: subnet-070bc9c800825dbd2
    us-east-2b:
      Public: subnet-0947b6bebe5425ec2
      Private: subnet-0e0cc0412cd1417c7


Conditions: 
  CreateEIP: !Equals [ !Ref SubnetType, Public]

Resources: 
  myEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 64
            Encrypted: true
        - DeviceName: /dev/xvdb
          Ebs:
            VolumeSize: 40
            Encrypted: true
      IamInstanceProfile: !Ref IamInstanceProfile
      ImageId: !FindInMap [AMIMap, us-east-2, ubuntu18]
      InstanceType: t2.micro
      KeyName: VAR_KEYNAME
      SecurityGroupIds: 
        - sg-0946fa03e2571cd62
      SubnetId: !FindInMap [SubnetMap, !Ref AvailabilityZone, !Ref SubnetType]
      Tags:
        - Key: Name
          Value: "moon-node-1"
      UserData: !Base64 |
        #!/bin/bash -ex
        hostnamectl set-hostname moon-node-1
        echo "nv-admin" > /home/ubuntu/user.txt
        echo "VAR_TIMEZONE" > /home/ubuntu/timezone.txt
        # timedatectl set-timezone VAR_TIMEZONE
        adduser "nv-admin"
        cp -R /home/ubuntu/.ssh /home/nv-admin/.ssh
        chown -R nv-admin: /home/nv-admin/
        echo "nv-admin ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/nv-admin
        chage -I -1 -m 0 -M 99999 -E -1 nv-admin
        echo "nv-admin" > /home/nv-admin/user.txt
        echo "VAR_TIMEZONE" > /home/nv-admin/timezone.txt
        reboot now
  ElasticIP:
    Type: AWS::EC2::EIP
    Condition: CreateEIP
    Properties:
      Domain: vpc
      InstanceId: !Ref myEC2Instance

  # END OF RESOURCES

Outputs:
  PrivateIP:
    Value: !GetAtt
      - myEC2Instance
      - PrivateIp
  PublicIP:
    Condition: CreateEIP
    Value: !GetAtt
      - myEC2Instance
      - PublicIp
  

  # END OF OUTPUTS